{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\EDYODA\\\\Assignment + Projects\\\\kafene\\\\kafene\\\\src\\\\Container\\\\OrderListing\\\\OrderListing.js\";\nimport React from 'react';\nimport Axios from 'axios';\nimport classes from '../OrderListing/OrderListing.module.css';\nimport { Link } from 'react-router-dom';\n\nclass OrderListing extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orderList: [],\n      filteredList: [],\n      showNew: true,\n      showPacked: true,\n      showInTransit: true,\n      showDelivered: true\n    };\n\n    this.renderTableRow = obj => {\n      const day = obj.orderDate.split('-')[0];\n      const month = obj.orderDate.split('-')[1];\n      const year = obj.orderDate.split('-')[2];\n      return /*#__PURE__*/_jsxDEV(Link, {\n        className: [currentLocation.includes('users') ? classes.Active : null].join(' '),\n        to: ROUTE_ENDPOINTS.USER_LIST,\n        children: [\"Users \", /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: classes.TableRow,\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: classes.SecondaryText,\n            children: obj.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: classes.PrimaryText,\n            children: obj.customerName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: classes.PrimaryText,\n            children: [`${day} ${month}, ${year}`, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 82\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.SecondaryText,\n              children: obj.orderTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 88\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: classes.SecondaryText,\n            children: `$${obj.amount}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: classes.PrimaryText,\n            children: obj.orderStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this)]\n        }, obj.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 138\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.getOrdersByStatus = (type, value) => {\n      if (!value) {\n        return [];\n      }\n\n      switch (type) {\n        case \"new\":\n          const arr = [...this.state.orderList].filter(item => {\n            return item.orderStatus === \"New\";\n          });\n          return arr;\n\n        case \"packed\":\n          return [...this.state.orderList].filter(item => {\n            return item.orderStatus === \"Packed\";\n          });\n\n        case \"transit\":\n          return [...this.state.orderList].filter(item => {\n            return item.orderStatus === \"InTransit\";\n          });\n\n        case \"delivered\":\n          return [...this.state.orderList].filter(item => {\n            return item.orderStatus === \"Delivered\";\n          });\n      }\n    };\n\n    this.onFilterCheckboxClick = (type, value) => {\n      switch (type) {\n        case \"new\":\n          if (value) {\n            var updatedVal = [...this.getOrdersByStatus('new', value), ...this.getOrdersByStatus('packed', this.state.showPacked), ...this.getOrdersByStatus('transit', this.state.showInTransit), ...this.getOrdersByStatus('delivered', this.state.showDelivered)];\n            this.setState({\n              showNew: value,\n              filteredList: [...updatedVal]\n            });\n          } else {\n            var updatedVal = [...this.state.filteredList].filter(item => {\n              return item.orderStatus !== 'New';\n            });\n            this.setState({\n              showNew: value,\n              filteredList: updatedVal\n            });\n          }\n\n          break;\n\n        case \"packed\":\n          if (value) {\n            var updatedVal = [...this.getOrdersByStatus('new', this.state.showNew), ...this.getOrdersByStatus('packed', value), ...this.getOrdersByStatus('transit', this.state.showInTransit), ...this.getOrdersByStatus('delivered', this.state.showDelivered)];\n            this.setState({\n              showPacked: value,\n              filteredList: [...updatedVal]\n            });\n          } else {\n            var updatedVal = [...this.state.filteredList].filter(item => {\n              return item.orderStatus !== 'Packed';\n            });\n            this.setState({\n              showPacked: value,\n              filteredList: updatedVal\n            });\n          }\n\n          break;\n\n        case \"transit\":\n          if (value) {\n            var updatedVal = [...this.getOrdersByStatus('new', this.state.showNew), ...this.getOrdersByStatus('packed', this.state.showPacked), ...this.getOrdersByStatus('transit', value), ...this.getOrdersByStatus('delivered', this.state.showDelivered)];\n            this.setState({\n              showInTransit: value,\n              filteredList: [...updatedVal]\n            });\n          } else {\n            var updatedVal = [...this.state.filteredList].filter(item => {\n              return item.orderStatus !== 'InTransit';\n            });\n            this.setState({\n              showInTransit: value,\n              filteredList: updatedVal\n            });\n          }\n\n          break;\n\n        case \"delivered\":\n          if (value) {\n            var updatedVal = [...this.getOrdersByStatus('new', this.state.showNew), ...this.getOrdersByStatus('packed', this.state.showPacked), ...this.getOrdersByStatus('transit', this.state.showInTransit), ...this.getOrdersByStatus('delivered', value)];\n            this.setState({\n              showDelivered: value,\n              filteredList: [...updatedVal]\n            });\n          } else {\n            var updatedVal = [...this.state.filteredList].filter(item => {\n              return item.orderStatus !== 'Delivered';\n            });\n            this.setState({\n              showDelivered: value,\n              filteredList: updatedVal\n            });\n          }\n\n          break;\n      }\n    };\n  }\n\n  componentDidMount() {\n    Axios.get('https://5fc1a1c9cb4d020016fe6b07.mockapi.io/api/v1/orders').then(res => {\n      console.log(res.data);\n      this.setState({\n        orderList: res.data,\n        filteredList: res.data\n      });\n    }).catch();\n  }\n\n  render() {\n    var tableRows = this.state.filteredList.map(item => {\n      return this.renderTableRow(item);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.PageWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: classes.MainHeading,\n        children: \"Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.OrdersWrapper,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.FilterWrapper,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.FilterOptions,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: classes.TotalCount,\n              children: [\"Count: \", this.state.filteredList.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: classes.FilterCheckbox,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                onClick: e => this.onFilterCheckboxClick('new', e.target.checked),\n                type: \"checkbox\",\n                checked: this.state.showNew,\n                type: \"checkbox\",\n                name: \"orders-new\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this), \"New\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: classes.FilterCheckbox,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                onClick: e => this.onFilterCheckboxClick('packed', e.target.checked),\n                type: \"checkbox\",\n                checked: this.state.showPacked,\n                type: \"checkbox\",\n                name: \"orders-packed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this), \"Packed\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: classes.FilterCheckbox,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                onClick: e => this.onFilterCheckboxClick('transit', e.target.checked),\n                type: \"checkbox\",\n                checked: this.state.showInTransit,\n                type: \"checkbox\",\n                name: \"orders-transit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 33\n              }, this), \"InTransit\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: classes.FilterCheckbox,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                onClick: e => this.onFilterCheckboxClick('delivered', e.target.checked),\n                type: \"checkbox\",\n                checked: this.state.showDelivered,\n                type: \"checkbox\",\n                name: \"orders-delivered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this), \"Delivered\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: classes.OrderTable,\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: tableRows\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default OrderListing;","map":{"version":3,"sources":["E:/EDYODA/Assignment + Projects/kafene/kafene/src/Container/OrderListing/OrderListing.js"],"names":["React","Axios","classes","Link","OrderListing","Component","state","orderList","filteredList","showNew","showPacked","showInTransit","showDelivered","renderTableRow","obj","day","orderDate","split","month","year","currentLocation","includes","Active","join","ROUTE_ENDPOINTS","USER_LIST","TableRow","SecondaryText","id","PrimaryText","customerName","orderTime","amount","orderStatus","getOrdersByStatus","type","value","arr","filter","item","onFilterCheckboxClick","updatedVal","setState","componentDidMount","get","then","res","console","log","data","catch","render","tableRows","map","PageWrapper","MainHeading","OrdersWrapper","FilterWrapper","FilterOptions","TotalCount","length","FilterCheckbox","e","target","checked","width","OrderTable"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,yCAApB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA2C;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/B;AACJC,MAAAA,SAAS,EAAE,EADP;AAEJC,MAAAA,YAAY,EAAE,EAFV;AAGJC,MAAAA,OAAO,EAAE,IAHL;AAIJC,MAAAA,UAAU,EAAE,IAJR;AAKJC,MAAAA,aAAa,EAAE,IALX;AAMJC,MAAAA,aAAa,EAAE;AANX,KAD+B;;AAAA,SAmBvCC,cAnBuC,GAmBrBC,GAAD,IAAS;AACtB,YAAMC,GAAG,GAAGD,GAAG,CAACE,SAAJ,CAAcC,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAZ;AACA,YAAMC,KAAK,GAAGJ,GAAG,CAACE,SAAJ,CAAcC,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAd;AACA,YAAME,IAAI,GAAGL,GAAG,CAACE,SAAJ,CAAcC,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAb;AAEA,0BACI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAE,CAACG,eAAe,CAACC,QAAhB,CAAyB,OAAzB,IAAoCnB,OAAO,CAACoB,MAA5C,GAAqD,IAAtD,EAA4DC,IAA5D,CAAiE,GAAjE,CAAjB;AAAwF,QAAA,EAAE,EAAEC,eAAe,CAACC,SAA5G;AAAA,0CAA6H;AAAI,UAAA,SAAS,EAAEvB,OAAO,CAACwB,QAAvB;AAAA,kCACzH;AAAI,YAAA,SAAS,EAAExB,OAAO,CAACyB,aAAvB;AAAA,sBAAuCb,GAAG,CAACc;AAA3C;AAAA;AAAA;AAAA;AAAA,kBADyH,eAEzH;AAAI,YAAA,SAAS,EAAE1B,OAAO,CAAC2B,WAAvB;AAAA,sBAAqCf,GAAG,CAACgB;AAAzC;AAAA;AAAA;AAAA;AAAA,kBAFyH,eAGzH;AAAI,YAAA,SAAS,EAAE5B,OAAO,CAAC2B,WAAvB;AAAA,uBAAsC,GAAEd,GAAI,IAAGG,KAAM,KAAIC,IAAK,EAA9D,oBAAiE;AAAA;AAAA;AAAA;AAAA,oBAAjE,eAAuE;AAAM,cAAA,SAAS,EAAEjB,OAAO,CAACyB,aAAzB;AAAA,wBAAyCb,GAAG,CAACiB;AAA7C;AAAA;AAAA;AAAA;AAAA,oBAAvE;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHyH,eAIzH;AAAI,YAAA,SAAS,EAAE7B,OAAO,CAACyB,aAAvB;AAAA,sBAAwC,IAAGb,GAAG,CAACkB,MAAO;AAAtD;AAAA;AAAA;AAAA;AAAA,kBAJyH,eAKzH;AAAI,YAAA,SAAS,EAAE9B,OAAO,CAAC2B,WAAvB;AAAA,sBAAqCf,GAAG,CAACmB;AAAzC;AAAA;AAAA;AAAA;AAAA,kBALyH;AAAA,WAAsCnB,GAAG,CAACc,EAA1C;AAAA;AAAA;AAAA;AAAA,gBAA7H;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AASH,KAjCsC;;AAAA,SAmCvCM,iBAnCuC,GAmCnB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjC,UAAG,CAACA,KAAJ,EAAW;AACP,eAAO,EAAP;AACH;;AACD,cAAOD,IAAP;AACI,aAAK,KAAL;AACI,gBAAME,GAAG,GAAG,CAAC,GAAG,KAAK/B,KAAL,CAAWC,SAAf,EAA0B+B,MAA1B,CAAiCC,IAAI,IAAI;AACjD,mBAAOA,IAAI,CAACN,WAAL,KAAqB,KAA5B;AACH,WAFW,CAAZ;AAGA,iBAAOI,GAAP;;AACJ,aAAK,QAAL;AACI,iBAAO,CAAC,GAAG,KAAK/B,KAAL,CAAWC,SAAf,EAA0B+B,MAA1B,CAAiCC,IAAI,IAAI;AAC5C,mBAAOA,IAAI,CAACN,WAAL,KAAqB,QAA5B;AACH,WAFM,CAAP;;AAGJ,aAAK,SAAL;AACI,iBAAO,CAAC,GAAG,KAAK3B,KAAL,CAAWC,SAAf,EAA0B+B,MAA1B,CAAiCC,IAAI,IAAI;AAC5C,mBAAOA,IAAI,CAACN,WAAL,KAAqB,WAA5B;AACH,WAFM,CAAP;;AAGJ,aAAK,WAAL;AACI,iBAAO,CAAC,GAAG,KAAK3B,KAAL,CAAWC,SAAf,EAA0B+B,MAA1B,CAAiCC,IAAI,IAAI;AAC5C,mBAAOA,IAAI,CAACN,WAAL,KAAqB,WAA5B;AACH,WAFM,CAAP;AAfR;AAmBH,KA1DsC;;AAAA,SA4DvCO,qBA5DuC,GA4Df,CAACL,IAAD,EAAOC,KAAP,KAAiB;AACrC,cAAOD,IAAP;AACI,aAAK,KAAL;AACI,cAAGC,KAAH,EAAU;AACN,gBAAIK,UAAU,GAAG,CAAC,GAAG,KAAKP,iBAAL,CAAuB,KAAvB,EAA8BE,KAA9B,CAAJ,EAA0C,GAAG,KAAKF,iBAAL,CAAuB,QAAvB,EAAiC,KAAK5B,KAAL,CAAWI,UAA5C,CAA7C,EAAsG,GAAG,KAAKwB,iBAAL,CAAuB,SAAvB,EAAkC,KAAK5B,KAAL,CAAWK,aAA7C,CAAzG,EAAsK,GAAG,KAAKuB,iBAAL,CAAuB,WAAvB,EAAoC,KAAK5B,KAAL,CAAWM,aAA/C,CAAzK,CAAjB;AACA,iBAAK8B,QAAL,CAAc;AAACjC,cAAAA,OAAO,EAAE2B,KAAV;AAAiB5B,cAAAA,YAAY,EAAE,CAAC,GAAGiC,UAAJ;AAA/B,aAAd;AACH,WAHD,MAGO;AACH,gBAAIA,UAAU,GAAG,CAAC,GAAG,KAAKnC,KAAL,CAAWE,YAAf,EAA6B8B,MAA7B,CAAoCC,IAAI,IAAI;AACzD,qBAAOA,IAAI,CAACN,WAAL,KAAqB,KAA5B;AACH,aAFgB,CAAjB;AAGA,iBAAKS,QAAL,CAAc;AAACjC,cAAAA,OAAO,EAAE2B,KAAV;AAAiB5B,cAAAA,YAAY,EAAEiC;AAA/B,aAAd;AACH;;AACD;;AACJ,aAAK,QAAL;AACI,cAAGL,KAAH,EAAU;AACN,gBAAIK,UAAU,GAAG,CAAC,GAAG,KAAKP,iBAAL,CAAuB,KAAvB,EAA8B,KAAK5B,KAAL,CAAWG,OAAzC,CAAJ,EAAuD,GAAG,KAAKyB,iBAAL,CAAuB,QAAvB,EAAiCE,KAAjC,CAA1D,EAAmG,GAAG,KAAKF,iBAAL,CAAuB,SAAvB,EAAkC,KAAK5B,KAAL,CAAWK,aAA7C,CAAtG,EAAmK,GAAG,KAAKuB,iBAAL,CAAuB,WAAvB,EAAoC,KAAK5B,KAAL,CAAWM,aAA/C,CAAtK,CAAjB;AACA,iBAAK8B,QAAL,CAAc;AAAChC,cAAAA,UAAU,EAAE0B,KAAb;AAAoB5B,cAAAA,YAAY,EAAE,CAAC,GAAGiC,UAAJ;AAAlC,aAAd;AACH,WAHD,MAGO;AACH,gBAAIA,UAAU,GAAG,CAAC,GAAG,KAAKnC,KAAL,CAAWE,YAAf,EAA6B8B,MAA7B,CAAoCC,IAAI,IAAI;AACzD,qBAAOA,IAAI,CAACN,WAAL,KAAqB,QAA5B;AACH,aAFgB,CAAjB;AAGA,iBAAKS,QAAL,CAAc;AAAChC,cAAAA,UAAU,EAAE0B,KAAb;AAAoB5B,cAAAA,YAAY,EAAEiC;AAAlC,aAAd;AACH;;AACD;;AACJ,aAAK,SAAL;AACI,cAAGL,KAAH,EAAU;AACN,gBAAIK,UAAU,GAAG,CAAC,GAAG,KAAKP,iBAAL,CAAuB,KAAvB,EAA8B,KAAK5B,KAAL,CAAWG,OAAzC,CAAJ,EAAuD,GAAG,KAAKyB,iBAAL,CAAuB,QAAvB,EAAiC,KAAK5B,KAAL,CAAWI,UAA5C,CAA1D,EAAmH,GAAG,KAAKwB,iBAAL,CAAuB,SAAvB,EAAkCE,KAAlC,CAAtH,EAAgK,GAAG,KAAKF,iBAAL,CAAuB,WAAvB,EAAoC,KAAK5B,KAAL,CAAWM,aAA/C,CAAnK,CAAjB;AACA,iBAAK8B,QAAL,CAAc;AAAC/B,cAAAA,aAAa,EAAEyB,KAAhB;AAAuB5B,cAAAA,YAAY,EAAE,CAAC,GAAGiC,UAAJ;AAArC,aAAd;AACH,WAHD,MAGO;AACH,gBAAIA,UAAU,GAAG,CAAC,GAAG,KAAKnC,KAAL,CAAWE,YAAf,EAA6B8B,MAA7B,CAAoCC,IAAI,IAAI;AACzD,qBAAOA,IAAI,CAACN,WAAL,KAAqB,WAA5B;AACH,aAFgB,CAAjB;AAGA,iBAAKS,QAAL,CAAc;AAAC/B,cAAAA,aAAa,EAAEyB,KAAhB;AAAuB5B,cAAAA,YAAY,EAAEiC;AAArC,aAAd;AACH;;AACD;;AACJ,aAAK,WAAL;AACI,cAAGL,KAAH,EAAU;AACN,gBAAIK,UAAU,GAAG,CAAC,GAAG,KAAKP,iBAAL,CAAuB,KAAvB,EAA8B,KAAK5B,KAAL,CAAWG,OAAzC,CAAJ,EAAuD,GAAG,KAAKyB,iBAAL,CAAuB,QAAvB,EAAiC,KAAK5B,KAAL,CAAWI,UAA5C,CAA1D,EAAmH,GAAG,KAAKwB,iBAAL,CAAuB,SAAvB,EAAkC,KAAK5B,KAAL,CAAWK,aAA7C,CAAtH,EAAmL,GAAG,KAAKuB,iBAAL,CAAuB,WAAvB,EAAoCE,KAApC,CAAtL,CAAjB;AACA,iBAAKM,QAAL,CAAc;AAAC9B,cAAAA,aAAa,EAAEwB,KAAhB;AAAuB5B,cAAAA,YAAY,EAAE,CAAC,GAAGiC,UAAJ;AAArC,aAAd;AACH,WAHD,MAGO;AACH,gBAAIA,UAAU,GAAG,CAAC,GAAG,KAAKnC,KAAL,CAAWE,YAAf,EAA6B8B,MAA7B,CAAoCC,IAAI,IAAI;AACzD,qBAAOA,IAAI,CAACN,WAAL,KAAqB,WAA5B;AACH,aAFgB,CAAjB;AAGA,iBAAKS,QAAL,CAAc;AAAC9B,cAAAA,aAAa,EAAEwB,KAAhB;AAAuB5B,cAAAA,YAAY,EAAEiC;AAArC,aAAd;AACH;;AACD;AA5CR;AA8CH,KA3GsC;AAAA;;AAUvCE,EAAAA,iBAAiB,GAAG;AAChB1C,IAAAA,KAAK,CAAC2C,GAAN,CAAU,2DAAV,EACCC,IADD,CACMC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACA,WAAKP,QAAL,CAAc;AAACnC,QAAAA,SAAS,EAAEuC,GAAG,CAACG,IAAhB;AAAsBzC,QAAAA,YAAY,EAAEsC,GAAG,CAACG;AAAxC,OAAd;AACH,KAJD,EAKCC,KALD;AAMH;;AA4FDC,EAAAA,MAAM,GAAG;AACL,QAAIC,SAAS,GAAG,KAAK9C,KAAL,CAAWE,YAAX,CAAwB6C,GAAxB,CAA4Bd,IAAI,IAAI;AAChD,aAAO,KAAK1B,cAAL,CAAoB0B,IAApB,CAAP;AACH,KAFe,CAAhB;AAGA,wBACI;AAAK,MAAA,SAAS,EAAErC,OAAO,CAACoD,WAAxB;AAAA,8BACI;AAAI,QAAA,SAAS,EAAEpD,OAAO,CAACqD,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAErD,OAAO,CAACsD,aAAxB;AAAA,gCACI;AAAK,UAAA,SAAS,EAAEtD,OAAO,CAACuD,aAAxB;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAEvD,OAAO,CAACwD,aAAxB;AAAA,oCACI;AAAG,cAAA,SAAS,EAAExD,OAAO,CAACyD,UAAtB;AAAA,oCAA0C,KAAKrD,KAAL,CAAWE,YAAX,CAAwBoD,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,SAAS,EAAE1D,OAAO,CAAC2D,cAA1B;AAAA,sCACI;AAAO,gBAAA,OAAO,EAAGC,CAAD,IAAO,KAAKtB,qBAAL,CAA2B,KAA3B,EAAkCsB,CAAC,CAACC,MAAF,CAASC,OAA3C,CAAvB;AAA4E,gBAAA,IAAI,EAAC,UAAjF;AAA4F,gBAAA,OAAO,EAAE,KAAK1D,KAAL,CAAWG,OAAhH;AAAyH,gBAAA,IAAI,EAAC,UAA9H;AAAyI,gBAAA,IAAI,EAAC;AAA9I;AAAA;AAAA;AAAA;AAAA,sBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAMI;AAAO,cAAA,SAAS,EAAEP,OAAO,CAAC2D,cAA1B;AAAA,sCACI;AAAO,gBAAA,OAAO,EAAGC,CAAD,IAAO,KAAKtB,qBAAL,CAA2B,QAA3B,EAAqCsB,CAAC,CAACC,MAAF,CAASC,OAA9C,CAAvB;AAA+E,gBAAA,IAAI,EAAC,UAApF;AAA+F,gBAAA,OAAO,EAAE,KAAK1D,KAAL,CAAWI,UAAnH;AAA+H,gBAAA,IAAI,EAAC,UAApI;AAA+I,gBAAA,IAAI,EAAC;AAApJ;AAAA;AAAA;AAAA;AAAA,sBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ,eAUI;AAAO,cAAA,SAAS,EAAER,OAAO,CAAC2D,cAA1B;AAAA,sCACI;AAAO,gBAAA,OAAO,EAAGC,CAAD,IAAO,KAAKtB,qBAAL,CAA2B,SAA3B,EAAsCsB,CAAC,CAACC,MAAF,CAASC,OAA/C,CAAvB;AAAgF,gBAAA,IAAI,EAAC,UAArF;AAAgG,gBAAA,OAAO,EAAE,KAAK1D,KAAL,CAAWK,aAApH;AAAmI,gBAAA,IAAI,EAAC,UAAxI;AAAmJ,gBAAA,IAAI,EAAC;AAAxJ;AAAA;AAAA;AAAA;AAAA,sBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVJ,eAcI;AAAO,cAAA,SAAS,EAAET,OAAO,CAAC2D,cAA1B;AAAA,sCACI;AAAO,gBAAA,OAAO,EAAGC,CAAD,IAAO,KAAKtB,qBAAL,CAA2B,WAA3B,EAAwCsB,CAAC,CAACC,MAAF,CAASC,OAAjD,CAAvB;AAAkF,gBAAA,IAAI,EAAC,UAAvF;AAAkG,gBAAA,OAAO,EAAE,KAAK1D,KAAL,CAAWM,aAAtH;AAAqI,gBAAA,IAAI,EAAC,UAA1I;AAAqJ,gBAAA,IAAI,EAAC;AAA1J;AAAA;AAAA;AAAA;AAAA,sBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAwBI;AAAK,UAAA,KAAK,EAAE;AAACqD,YAAAA,KAAK,EAAE;AAAR,WAAZ;AAAA,iCACI;AAAO,YAAA,SAAS,EAAE/D,OAAO,CAACgE,UAA1B;AAAA,oCACI;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eASA;AAAA,wBACKd;AADL;AAAA;AAAA;AAAA;AAAA,oBATA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA6CH;;AA9JsC;;AAiK3C,eAAehD,YAAf","sourcesContent":["import React from 'react';\r\nimport Axios from 'axios'\r\n\r\nimport classes from '../OrderListing/OrderListing.module.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass OrderListing extends React.Component {\r\n    state = {\r\n        orderList: [],\r\n        filteredList: [],\r\n        showNew: true,\r\n        showPacked: true,\r\n        showInTransit: true,\r\n        showDelivered: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        Axios.get('https://5fc1a1c9cb4d020016fe6b07.mockapi.io/api/v1/orders')\r\n        .then(res => {\r\n            console.log(res.data)\r\n            this.setState({orderList: res.data, filteredList: res.data});\r\n        })\r\n        .catch()\r\n    }\r\n\r\n    renderTableRow = (obj) => {\r\n        const day = obj.orderDate.split('-')[0];\r\n        const month = obj.orderDate.split('-')[1];\r\n        const year = obj.orderDate.split('-')[2];\r\n\r\n        return (\r\n            <Link className={[currentLocation.includes('users') ? classes.Active : null].join(' ')} to={ROUTE_ENDPOINTS.USER_LIST}>Users <tr className={classes.TableRow} key={obj.id}>\r\n                <td className={classes.SecondaryText}>{obj.id}</td>\r\n                <td className={classes.PrimaryText}>{obj.customerName}</td>\r\n                <td className={classes.PrimaryText}>{`${day} ${month}, ${year}`} <br /><span className={classes.SecondaryText}>{obj.orderTime}</span></td>\r\n                <td className={classes.SecondaryText}>{`$${obj.amount}`}</td>\r\n                <td className={classes.PrimaryText}>{obj.orderStatus}</td>\r\n            </tr></Link> \r\n        )\r\n    }\r\n\r\n    getOrdersByStatus = (type, value) => {\r\n        if(!value) {\r\n            return []\r\n        }\r\n        switch(type) {\r\n            case \"new\":\r\n                const arr = [...this.state.orderList].filter(item => {\r\n                    return item.orderStatus === \"New\"\r\n                })\r\n                return arr;\r\n            case \"packed\":\r\n                return [...this.state.orderList].filter(item => {\r\n                    return item.orderStatus === \"Packed\"\r\n                })\r\n            case \"transit\":\r\n                return [...this.state.orderList].filter(item => {\r\n                    return item.orderStatus === \"InTransit\"\r\n                })\r\n            case \"delivered\":\r\n                return [...this.state.orderList].filter(item => {\r\n                    return item.orderStatus === \"Delivered\"\r\n                })\r\n        }\r\n    }\r\n\r\n    onFilterCheckboxClick = (type, value) => {\r\n        switch(type) {\r\n            case \"new\":\r\n                if(value) {\r\n                    var updatedVal = [...this.getOrdersByStatus('new', value), ...this.getOrdersByStatus('packed', this.state.showPacked), ...this.getOrdersByStatus('transit', this.state.showInTransit), ...this.getOrdersByStatus('delivered', this.state.showDelivered)];\r\n                    this.setState({showNew: value, filteredList: [...updatedVal]});\r\n                } else {\r\n                    var updatedVal = [...this.state.filteredList].filter(item => {\r\n                        return item.orderStatus !== 'New'\r\n                    })\r\n                    this.setState({showNew: value, filteredList: updatedVal})\r\n                }\r\n                break;\r\n            case \"packed\":\r\n                if(value) {\r\n                    var updatedVal = [...this.getOrdersByStatus('new', this.state.showNew), ...this.getOrdersByStatus('packed', value), ...this.getOrdersByStatus('transit', this.state.showInTransit), ...this.getOrdersByStatus('delivered', this.state.showDelivered)];\r\n                    this.setState({showPacked: value, filteredList: [...updatedVal]});\r\n                } else {\r\n                    var updatedVal = [...this.state.filteredList].filter(item => {\r\n                        return item.orderStatus !== 'Packed'\r\n                    })\r\n                    this.setState({showPacked: value, filteredList: updatedVal})\r\n                }\r\n                break;\r\n            case \"transit\":\r\n                if(value) {\r\n                    var updatedVal = [...this.getOrdersByStatus('new', this.state.showNew), ...this.getOrdersByStatus('packed', this.state.showPacked), ...this.getOrdersByStatus('transit', value), ...this.getOrdersByStatus('delivered', this.state.showDelivered)];\r\n                    this.setState({showInTransit: value, filteredList: [...updatedVal]});\r\n                } else {\r\n                    var updatedVal = [...this.state.filteredList].filter(item => {\r\n                        return item.orderStatus !== 'InTransit'\r\n                    })\r\n                    this.setState({showInTransit: value, filteredList: updatedVal})\r\n                }\r\n                break;\r\n            case \"delivered\":\r\n                if(value) {\r\n                    var updatedVal = [...this.getOrdersByStatus('new', this.state.showNew), ...this.getOrdersByStatus('packed', this.state.showPacked), ...this.getOrdersByStatus('transit', this.state.showInTransit), ...this.getOrdersByStatus('delivered', value)];\r\n                    this.setState({showDelivered: value, filteredList: [...updatedVal]});\r\n                } else {\r\n                    var updatedVal = [...this.state.filteredList].filter(item => {\r\n                        return item.orderStatus !== 'Delivered'\r\n                    })\r\n                    this.setState({showDelivered: value, filteredList: updatedVal})\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var tableRows = this.state.filteredList.map(item => {\r\n            return this.renderTableRow(item)\r\n        })\r\n        return(\r\n            <div className={classes.PageWrapper}>\r\n                <h1 className={classes.MainHeading}>Orders</h1>\r\n                <div className={classes.OrdersWrapper}>\r\n                    <div className={classes.FilterWrapper}>\r\n                        <h3>Filters</h3>\r\n                        <div className={classes.FilterOptions}>\r\n                            <p className={classes.TotalCount}>Count: {this.state.filteredList.length}</p>\r\n                            <label className={classes.FilterCheckbox}>\r\n                                <input onClick={(e) => this.onFilterCheckboxClick('new', e.target.checked)} type=\"checkbox\" checked={this.state.showNew} type=\"checkbox\" name=\"orders-new\" />\r\n                                New\r\n                            </label>\r\n                            <label className={classes.FilterCheckbox}>\r\n                                <input onClick={(e) => this.onFilterCheckboxClick('packed', e.target.checked)} type=\"checkbox\" checked={this.state.showPacked} type=\"checkbox\" name=\"orders-packed\" />\r\n                                Packed\r\n                            </label>\r\n                            <label className={classes.FilterCheckbox}>\r\n                                <input onClick={(e) => this.onFilterCheckboxClick('transit', e.target.checked)} type=\"checkbox\" checked={this.state.showInTransit} type=\"checkbox\" name=\"orders-transit\" />\r\n                                InTransit\r\n                            </label>\r\n                            <label className={classes.FilterCheckbox}>\r\n                                <input onClick={(e) => this.onFilterCheckboxClick('delivered', e.target.checked)} type=\"checkbox\" checked={this.state.showDelivered} type=\"checkbox\" name=\"orders-delivered\" />\r\n                                Delivered\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div style={{width: '100%'}}>\r\n                        <table className={classes.OrderTable}>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Customer</th>\r\n                                <th>Date</th>\r\n                                <th>Amount</th>\r\n                                <th>Status</th>\r\n                            </tr>\r\n\r\n                        <tbody>\r\n                            {tableRows}\r\n                        </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OrderListing;"]},"metadata":{},"sourceType":"module"}